# Generated by Django 2.2.1 on 2019-05-06 07:36

from django.db import migrations, models
from django.db.models import Count


def remove_duplicate_customer_ids(apps, schema_editor):
    """Remove duplicate customer_ids per organization by prefixing zeros."""
    contact_class = apps.get_model('contact', 'Contact')
    organizations = contact_class.objects.values(
        'organization_uuid').distinct().values_list('organization_uuid', flat=True)
    for org in organizations:
        contacts = contact_class.objects.filter(organization_uuid=org).values('customer_id').annotate(
            Count('customer_id')).order_by().filter(customer_id__count__gt=1)
        for contact in contacts:
            dupe_contacts = contact_class.objects.filter(organization_uuid=org, customer_id=contact['customer_id'])
            for i, c in enumerate(dupe_contacts):
                c.customer_id = i * '0' + c.customer_id
                c.save()


class Migration(migrations.Migration):

    dependencies = [
        ('contact', '0013_contact_create_edit_dates'),
    ]

    operations = [
        migrations.RunPython(remove_duplicate_customer_ids,
                             migrations.RunPython.noop),
        migrations.AddConstraint(
            model_name='contact',
            constraint=models.UniqueConstraint(condition=models.Q(_negated=True, customer_id=None), fields=('organization_uuid', 'customer_id'), name='unique_organization_customer_id'),
        ),
    ]
